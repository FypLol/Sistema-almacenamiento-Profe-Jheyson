<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAbkUlEQVR4Xu3dCZCtZX3n8WZzAcLmCiiCMe6jRoMKMSlNXDAOjqOQUWakjI4o7qOjJuMkIZWZREWj
        mJQxU24xGkcUo9G44bgrRktHQY1jKYILuLAJKjszv8c7QF/4X+693ae7n/d9Pt+qT5X1p28v7/scT/c5
        77IkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSbqm/eOweGa8PE6KT8bX4odxXlwW/xcAtkF7zmjPHe055KvxiXhHvCyeEQ+L/ULr
        2E5xcLwg3h/nRrXzAGCtnRPvi+fHr0V7jtICu008O94dF0S1EwBgo50f74pnRXt1WivopnFkvCcuj2pD
        A0CvroxPxTGxe2grHRp/GxdFtUEBYGrac9ob4/6h6/SAaH/tVxsOAOaivSpweAzfg+OUqDYSAMzVF6O9
        1b1DDNW947NRbRQAGMWn414x+/aME+KKqDYEAIymHTD4N9GeI2dZe8/ju1H98AAwurPj6JjN2wLtN5q3
        R/XDAgCba9e92ScmXbtq3+lR/YAAQO3MaKfGT6728kW7et+lUf1gAMANaxfCOy52jEm0a7RLIVY/DACw
        fdpN7toVcrtu72gXOah+AABgZdqp8zePLts3vhzVNw4ArE67NfFto6vuHO2AheobBgAW44xoz7lddJf4
        cVTfKACwWD+KDf8loN3vuP02Un2DAMDaaBfWOyA2pL3Ce/4AsDG+Eut+waB2OoKj/QFgY7WzA3aLdald
        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
        HBwIANunHey35tf2X+vacQHvjOoHBAA2127pu2Z39duIDo/vRPXDAsDozoqjY5btFseFYwMAYJPL44TY
        I2bfPeJTUW0IABjFx+PuMVwPiA9HtVEAYK7aH8HtrfFJHuG/yNovAu+JaiMBwFxc/cSv63S/eENcGNWG
        A4Cp+Um8Pu4b2krtikdHRntVoB0cUW1QAOjVlXFytKP6dw+toHaToadHu7zwuVFtaADYaOfEO+JpcevQ
        Atsx7h3Pi3+Kdk/kaicAwFprz0Hvjfac9KvRnqO0jrXfsh4a7Teul0a7aUI7raLdNvHsOC8ujmrnAcB1
        teeM9tzRnkPac0l7TmnPLe055th4SPgLX5IkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIk
        SZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZIkSZJ+0dLS/wNEdSW4wi3rUgAAAABJRU5ErkJg
        gg==
</value>
  </data>
</root>